# Шаги:

Посмотрела какие таблицы есть в базе данных 
1. Создала двух курьеров 
2. Создала 2 заказа 
3. Проверила что заказы и курьеры созданы 
4. За каждым курьером закрепила по одному заказу
4. Проверила статусы заказов, увидела что они не в «доставке» 
5. Обновила статусы заказов на «в доставке» 
6. По заданию 1 - вывела список логинов курьеров с количеством их заказов в статусе «В доставке» 
7. По заданию 2 - вывела все треки заказов и их статусы
8. Увидела что поле track пустые и присвоила номера 
9. Финально получила 


Last login: Thu May 23 11:39:56 on ttys000
Nadya@MacBook-Pro-13--Nadya ~ % ssh 93801492-5752-4b46-891f-a293f427c28a@serverhub.praktikum-services.ru -p 4554
morty@004dd25365c0:~$ psql -U morty -d scooter_rent
Password for user morty: 
psql (11.18 (Debian 11.18-0+deb10u1))
Type "help" for help.

scooter_rent=# \d
              List of relations
 Schema |      Name       |   Type   | Owner 
--------+-----------------+----------+-------
 public | Couriers        | table    | root
 public | Couriers_id_seq | sequence | root
 public | Orders          | table    | root
 public | Orders_id_seq   | sequence | root
 public | SequelizeMeta   | table    | root
(5 rows)

scooter_rent=# \d "Couriers_id_seq"
                  Sequence "public.Couriers_id_seq"
  Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
---------+-------+---------+------------+-----------+---------+-------
 integer |     1 |       1 | 2147483647 |         1 | no      |     1
Owned by: public."Couriers".id

scooter_rent=# \d "Orders_id_seq"
                   Sequence "public.Orders_id_seq"
  Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
---------+-------+---------+------------+-----------+---------+-------
 integer |     1 |       1 | 2147483647 |         1 | no      |     1
Owned by: public."Orders".id

scooter_rent=# \d "Couriers"
scooter_rent=# \d "Orders"
scooter_rent=# INSERT "Couriers" ("login", "passwordHash", "firstName", "createdAt", "updatedAt")
scooter_rent-# VALUES 
scooter_rent-# ('courier1', 'password1', 'John', NOW(), NOW()),
scooter_rent-# ('courier2', 'password2', 'Jane', NOW(), NOW());
ERROR:  syntax error at or near ""Couriers""
LINE 1: INSERT "Couriers" ("login", "passwordHash", "firstName", "cr...
               ^
scooter_rent=# INSERT INTO "Couriers" ("login", "passwordHash", "firstName", "createdAt", "updatedAt")
scooter_rent-# VALUES 
scooter_rent-# ('courier1', 'password1', 'John', NOW(), NOW()),
scooter_rent-# ('courier2', 'password2', 'Jane', NOW(), NOW());
INSERT 0 2
scooter_rent=# INSERT INTO "Orders" ("firstName", "lastName", "address", "metroStation", "phone", "rentTime", "deliveryDate", "inDelivery", "createdAt", "updatedAt")
scooter_rent-# VALUES 
scooter_rent-# ('Helen', 'Smith', 'Pushkina, 15', 'Pushkinskaya', '+79991234455', 3, '2024-05-25', false, NOW(), NOW()),
scooter_rent-# ('Garry', 'Smith', 'Lenina, 1', 'Starokrimskaya', '+79998881122', 7, '2024-05-25', false, NOW(), NOW());
INSERT 0 2
scooter_rent=# SELECT "id", "login" FROM "Couriers";
 id |  login   
----+----------
  1 | courier1
  2 | courier2
(2 rows)

scooter_rent=# UPDATE "Orders" SET "courierId" = 1 WHERE "id" = 1;
UPDATE 1
scooter_rent=# UPDATE "Orders" SET "courierId" = 2 WHERE "id" = 2;
UPDATE 1
scooter_rent=# UPDATE "Orders" SET "inDelivery" = true WHERE "id" = 1;
UPDATE 1
scooter_rent=# UPDATE "Orders" SET "inDelivery" = true WHERE "id" = 2;
UPDATE 1
scooter_rent=# SELECT "Couriers"."login", COUNT("Orders"."id") AS "Orders in Delivery"
scooter_rent-# FROM "Couriers"
scooter_rent-# LEFT JOIN "Orders" ON "Couriers"."id" = "Orders"."courierId"
scooter_rent-# WHERE "Orders"."inDelivery" = true
scooter_rent-# GROUP BY "Couriers"."login";
  login   | Orders in Delivery 
----------+--------------------
 courier1 |                  1
 courier2 |                  1
(2 rows)

scooter_rent=# SELECT 
scooter_rent-#     "track", 
scooter_rent-#     CASE 
scooter_rent-#         WHEN "finished" = true THEN 2
scooter_rent-#         WHEN "cancelled" = true THEN -1
scooter_rent-#         WHEN "inDelivery" = true THEN 1
scooter_rent-#         ELSE 0
scooter_rent-#     END AS "status"
scooter_rent-# FROM "Orders";
 track | status 
-------+--------
       |      1
       |      1
(2 rows)

scooter_rent=# SELECT "id", "track", "finished", "cancelled", "inDelivery" 
scooter_rent-# FROM "Orders";
 id | track | finished | cancelled | inDelivery 
----+-------+----------+-----------+------------
  1 |       |          |           | t
  2 |       |          |           | t
(2 rows)


scooter_rent=# UPDATE "Orders" SET "track" = 1002 WHERE "id" = 2;
UPDATE 1
scooter_rent=# SELECT 
scooter_rent-#     "track", 
scooter_rent-#     CASE 
scooter_rent-#         WHEN "finished" = true THEN 2
scooter_rent-#         WHEN "cancelled" = true THEN -1
scooter_rent-#         WHEN "inDelivery" = true THEN 1
scooter_rent-#         ELSE 0
scooter_rent-#     END AS "status"
scooter_rent-# FROM "Orders";
 track | status 
-------+--------
       |      1
  1002 |      1
(2 rows)

scooter_rent=# UPDATE "Orders" SET "track" = 1001 WHERE "id" = 1;
UPDATE 1
scooter_rent=# SELECT 
scooter_rent-#     "track", 
scooter_rent-#     CASE 
scooter_rent-#         WHEN "finished" = true THEN 2
scooter_rent-#         WHEN "cancelled" = true THEN -1
scooter_rent-#         WHEN "inDelivery" = true THEN 1
scooter_rent-#         ELSE 0
scooter_rent-#     END AS "status"
scooter_rent-# FROM "Orders";
 track | status 
-------+--------
  1002 |      1
  1001 |      1
(2 rows)

scooter_rent=# 
